package com.istloja.vistas;

import com.istdloja.modelo.Inventario;
import com.istdloja.modelo.Nota_de_venta;
import com.istdloja.modelo.Persona;
import com.istdloja.modelo.ProductoVendido;
import com.istdloja.modelo.Provedores;
import com.istdloja.modelo.Venta;
import com.istloja.controlador.Inventariobd;
import com.istloja.controlador.Nota_de_Ventabd;
import com.istloja.controlador.Personabd;
import com.istloja.controlador.ProductoVendidobd;
import com.istloja.controlador.Provedoresbd;
import com.istloja.modelTables.ModelTablePersona;
import com.istloja.utilidad.Utilidades;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import com.istloja.modelTables.ComunicacionvistaModelosTablas;
import com.istloja.modelTables.ModelTableInventario;
import com.istloja.modelTables.ModelTableProvedores;
import com.istloja.modelTables.ModelTableVentaFinal;
import com.istloja.modelTables.ModelTableVentas;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author danielmora
 */
public class GestionContable extends javax.swing.JFrame implements ComunicacionvistaModelosTablas {

    private Utilidades utilidades;
    private Personabd controladorPersona;
    private Provedoresbd controladorprovedor;
    private Inventariobd controladorinvetario;
    private Nota_de_Ventabd controladorNotadeVenta;
    private ProductoVendidobd controladorProductoVendido;
    private Persona personaEditar;
    private Inventario inventarioEditarSeleccionado;
    private Provedores editarProvedores;
    private GestionPersona gestionPersona;
    private GestionContableProvedores gestionProvedores;
    private GestionInventario gestionInventario;
    private ModelTablePersona modelTablePersona;
    private ModelTableProvedores modelTableProvedores;
    private ModelTableInventario modelTableInventario;
    private ModelTableVentas modelTableVentas;
    private ModelTableVentaFinal modelTableVentaFinal;

    /**
     * Creates new form GestionPersona2
     */
    // Para Crear Reportes : Enlace : https://drive.google.com/drive/folders/1mlX9RWI6Oj-m-jU9brEGoMGxt0J9rbxF
    // clase Practica1 :https://drive.google.com/file/d/1We2Zi7MVJIb2ZGd7iZStR7M4C2lgBMut/view
    // 
    public GestionContable() {

        controladorPersona = new Personabd();
        controladorprovedor = new Provedoresbd();
        controladorinvetario = new Inventariobd();
        controladorNotadeVenta = new Nota_de_Ventabd();
        controladorProductoVendido = new ProductoVendidobd();
        modelTablePersona = new ModelTablePersona(controladorPersona.obtenerPersona(), this);
        modelTableProvedores = new ModelTableProvedores(controladorprovedor.obtenerProvedores(), this);
        modelTableInventario = new ModelTableInventario(controladorinvetario.obtenerInventario(), this);
        //modelTableVentas = new ModelTableVentas(controladorinvetario.obtenerInventario(), this);
        modelTableVentaFinal = new ModelTableVentaFinal(new ArrayList<Venta>(), this);

        initComponents();
        radioBotonCedula.setSelected(true);
        utilidades = new Utilidades();
        setLocationRelativeTo(null);
        gestionPersona = new GestionPersona(txtCedula, txtNombre, txtApellido, txtDireccion, txtTelefono, txtCorreo, utilidades, this, ComboBoxGeneroPersona);
        gestionProvedores = new GestionContableProvedores(txtxRuc, txtxRazonSiocial, txtTipo_actividad, txtNombre_Representante_Legal, txtApellido_Representante_legal, txtTelefono_Provedores, txtCorreo_provedores, txtDireccionProvedores, jDateFechaVencimientoDeuda, utilidades, this);
        gestionInventario = new GestionInventario(txtcodigoProductoInvntario, txtdescripcionInventario, txtcatidadInventario, txtprecioCompraInvntario_sinIva, txtprecioCompraInvntario_conIva, txtprecioMayoristaInventario, txtPrecioClienteFijo, txtPrecioClienteNormal, jDateInventario, utilidades, this);
        ventasFinal = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Grupo1 = new javax.swing.ButtonGroup();
        tabGeneral = new javax.swing.JTabbedPane();
        panelClientes = new javax.swing.JPanel();
        BotonBuscarTelefono = new javax.swing.JButton();
        panelCuerpoRegistro = new javax.swing.JPanel();
        jLabelCedula = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelApellido = new javax.swing.JLabel();
        jLabelDireccion = new javax.swing.JLabel();
        jLabelTelefono = new javax.swing.JLabel();
        jLabelCorreo = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        botonGuardar = new javax.swing.JButton();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonTraer = new javax.swing.JButton();
        botonLimpiarCajas = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        ComboBoxGeneroPersona = new javax.swing.JComboBox<>();
        radioBotonPasaporte = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        jDateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        botonLimpiarCajas1 = new javax.swing.JButton();
        txt45 = new javax.swing.JLabel();
        radioBotonCedula = new javax.swing.JRadioButton();
        txtParametroBusquedaPersona = new javax.swing.JTextField();
        btnBuscarPersona = new javax.swing.JButton();
        comboParametroBusquedaPersona = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        BotonBuscarCedula = new javax.swing.JButton();
        jScrollCliente = new javax.swing.JScrollPane();
        TablaCliente = new javax.swing.JTable();
        panelProvedores = new javax.swing.JPanel();
        titulo_provedores = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtxRuc = new javax.swing.JTextField();
        txtxRazonSiocial = new javax.swing.JTextField();
        txtTipo_actividad = new javax.swing.JTextField();
        txtNombre_Representante_Legal = new javax.swing.JTextField();
        txtApellido_Representante_legal = new javax.swing.JTextField();
        txtTelefono_Provedores = new javax.swing.JTextField();
        btnGuardarProvedores = new javax.swing.JButton();
        txtCorreo_provedores = new javax.swing.JTextField();
        btnEditarProvedores = new javax.swing.JButton();
        btnEliminarProvedores = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        conmboBoxBusquedaProvedor = new javax.swing.JComboBox<>();
        txtPramatroBusquedaProvedor = new javax.swing.JTextField();
        btnBuscarProvedor = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtDireccionProvedores = new javax.swing.JTextField();
        jDateFechaVencimientoDeuda = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaProvedores = new javax.swing.JTable();
        btnUltimoRegistroProvedor = new javax.swing.JButton();
        btnLimpiarProvedor = new javax.swing.JButton();
        panelInventario = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtcodigoProductoInvntario = new javax.swing.JTextField();
        txtdescripcionInventario = new javax.swing.JTextField();
        txtprecioCompraInvntario_sinIva = new javax.swing.JTextField();
        txtprecioCompraInvntario_conIva = new javax.swing.JTextField();
        txtcatidadInventario = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        btnguardarInventario = new javax.swing.JButton();
        btneditarInventario = new javax.swing.JButton();
        btneliminarInventario = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        combo_busqueda_INVENTARIO = new javax.swing.JComboBox<>();
        txtParamtroBusquedaInventario = new javax.swing.JTextField();
        btnBuscarComboboxInventario = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        txtprecioMayoristaInventario = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtPrecioClienteFijo = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtPrecioClienteNormal = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jDateInventario = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableInventario = new javax.swing.JTable();
        btneLimpiarnventario = new javax.swing.JButton();
        titulo_inventario = new javax.swing.JLabel();
        panelVenta = new javax.swing.JPanel();
        titulo_venta = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        txtNumerodeNotadeVenta = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtCedulaRucVentas = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtNombreClienteVentas = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtTelefonoVentasCliente = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtxDireccionClienteVentas = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jDateFechaVentaClientefinal = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        txtIDproductoVenta = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtCantidadProductoVentas = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableVentas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txtSubTotalVentaFinal = new javax.swing.JTextField();
        txtIvaVentaFinal = new javax.swing.JTextField();
        txtTotalVentaFinal = new javax.swing.JTextField();
        ButtonBusquedaAvanzada = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        ComboBoxTipodepago = new javax.swing.JComboBox<>();
        ButtonGuadarNota_venta = new javax.swing.JButton();
        ButtonImprimir_venta = new javax.swing.JButton();
        ButtonLimpiar_venta = new javax.swing.JButton();
        Menu_general = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        subMenuBuscarPersona = new javax.swing.JMenuItem();
        subMenuGuardar = new javax.swing.JMenuItem();
        subMenuEditar = new javax.swing.JMenuItem();
        subMenuEliminar = new javax.swing.JMenuItem();
        subMenuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jLabel4.setText("jLabel4");

        jMenuItem2.setText("jMenuItem2");

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        jMenu5.setText("jMenu5");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion Persona");

        BotonBuscarTelefono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/buscarBoton.png"))); // NOI18N
        BotonBuscarTelefono.setText("Buscar");
        BotonBuscarTelefono.setToolTipText("Buscar Usuario Por un Telefono");
        BotonBuscarTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarTelefonoActionPerformed(evt);
            }
        });

        panelCuerpoRegistro.setBorder(javax.swing.BorderFactory.createTitledBorder("Personas"));
        panelCuerpoRegistro.setToolTipText("");

        jLabelCedula.setText("DNI");

        jLabelNombre.setText("Nombre");

        jLabelApellido.setText("Apellido");

        jLabelDireccion.setText("Direccion");

        jLabelTelefono.setText("Telefono");

        jLabelCorreo.setText("Correo");

        txtCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCedulaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaFocusLost(evt);
            }
        });
        txtCedula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtCedulaMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtCedulaMouseEntered(evt);
            }
        });

        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/salvarBoton.png"))); // NOI18N
        botonGuardar.setText("GUARDAR");
        botonGuardar.setToolTipText("Guardamos un Usuario");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/editarBoton.png"))); // NOI18N
        botonEditar.setText("EDITAR");
        botonEditar.setToolTipText("Editamos un Usuario");
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        botonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/eliminarBoton.png"))); // NOI18N
        botonEliminar.setText("ELIMINAR");
        botonEliminar.setToolTipText("Eliminamos un Usuario");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonTraer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/atrasBoton.png"))); // NOI18N
        botonTraer.setText("TRAER");
        botonTraer.setToolTipText("Mostramos el ultimo Usuario Ingresado");
        botonTraer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTraerActionPerformed(evt);
            }
        });

        botonLimpiarCajas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/com.istl.recourse.img.png"))); // NOI18N
        botonLimpiarCajas.setText("Limpiar");
        botonLimpiarCajas.setToolTipText("Limpiamos las cajas de texto y se inician en vacio");
        botonLimpiarCajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarCajasActionPerformed(evt);
            }
        });

        jLabel19.setText("Genero");

        ComboBoxGeneroPersona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Definido", "Hombre", "Mujer" }));

        Grupo1.add(radioBotonPasaporte);
        radioBotonPasaporte.setText("Pasaporte");
        radioBotonPasaporte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioBotonPasaporteItemStateChanged(evt);
            }
        });

        jLabel20.setText("Fecha Nacimiento");

        botonLimpiarCajas1.setText("Limpiar");
        botonLimpiarCajas1.setToolTipText("Limpiamos las cajas de texto y se inician en vacio");
        botonLimpiarCajas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarCajas1ActionPerformed(evt);
            }
        });

        Grupo1.add(radioBotonCedula);
        radioBotonCedula.setText("Cedula");
        radioBotonCedula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioBotonCedulaItemStateChanged(evt);
            }
        });
        radioBotonCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBotonCedulaActionPerformed(evt);
            }
        });

        txtParametroBusquedaPersona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParametroBusquedaPersonaKeyReleased(evt);
            }
        });

        btnBuscarPersona.setText("Buscar");
        btnBuscarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPersonaActionPerformed(evt);
            }
        });

        comboParametroBusquedaPersona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cedula", "Nombre", "Apellido", "Correo" }));
        comboParametroBusquedaPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboParametroBusquedaPersonaActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar Cliente");

        javax.swing.GroupLayout panelCuerpoRegistroLayout = new javax.swing.GroupLayout(panelCuerpoRegistro);
        panelCuerpoRegistro.setLayout(panelCuerpoRegistroLayout);
        panelCuerpoRegistroLayout.setHorizontalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDireccion)
                            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNombre)
                                    .addComponent(jLabelCedula)
                                    .addComponent(jLabelTelefono)
                                    .addComponent(jLabelCorreo)
                                    .addComponent(jLabel19))
                                .addGap(5, 5, 5))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                                .addComponent(jLabelApellido)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(botonGuardar)
                        .addGap(32, 32, 32)
                        .addComponent(botonEditar)
                        .addGap(34, 34, 34)
                        .addComponent(botonEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(botonTraer, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonLimpiarCajas)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(txt45, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioBotonCedula)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioBotonPasaporte))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCuerpoRegistroLayout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(ComboBoxGeneroPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                        .addGap(0, 34, Short.MAX_VALUE)
                                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                                                .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(25, 25, 25)))
                        .addGap(21, 21, 21))
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addComponent(jDateFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGap(513, 513, 513)
                        .addComponent(botonLimpiarCajas1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comboParametroBusquedaPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtParametroBusquedaPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnBuscarPersona)
                .addContainerGap())
        );
        panelCuerpoRegistroLayout.setVerticalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCedula)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioBotonPasaporte)
                    .addComponent(txt45)
                    .addComponent(radioBotonCedula))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelApellido)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDireccion)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCorreo)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(ComboBoxGeneroPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonLimpiarCajas)
                    .addComponent(botonTraer)
                    .addComponent(botonEliminar)
                    .addComponent(botonEditar)
                    .addComponent(botonGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboParametroBusquedaPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParametroBusquedaPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPersona)
                    .addComponent(jLabel2))
                .addGap(61, 61, 61)
                .addComponent(botonLimpiarCajas1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Registro Personas");

        BotonBuscarCedula.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/buscarBoton.png"))); // NOI18N
        BotonBuscarCedula.setText("Buscar");
        BotonBuscarCedula.setToolTipText("Buscar Usuario Por una Cedula");
        BotonBuscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarCedulaActionPerformed(evt);
            }
        });

        TablaCliente.setModel(modelTablePersona);
        jScrollCliente.setViewportView(TablaCliente);

        javax.swing.GroupLayout panelClientesLayout = new javax.swing.GroupLayout(panelClientes);
        panelClientes.setLayout(panelClientesLayout);
        panelClientesLayout.setHorizontalGroup(
            panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClientesLayout.createSequentialGroup()
                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClientesLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonBuscarCedula)
                            .addComponent(BotonBuscarTelefono)))
                    .addGroup(panelClientesLayout.createSequentialGroup()
                        .addGap(459, 459, 459)
                        .addComponent(jLabel1))
                    .addGroup(panelClientesLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 978, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        panelClientesLayout.setVerticalGroup(
            panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClientesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClientesLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(BotonBuscarCedula)
                        .addGap(138, 138, 138)
                        .addComponent(BotonBuscarTelefono))
                    .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(966, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Clientes ", panelClientes);

        titulo_provedores.setText("Registro Provedores");
        titulo_provedores.setMaximumSize(new java.awt.Dimension(125, 26));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Proveedores "));

        jLabel3.setText("Ruc");

        jLabel5.setText("Razon Social");

        jLabel6.setText("Tipo Actividad");

        jLabel7.setText("Nombre_Representante_legal");

        jLabel8.setText("Apellido_Representante_legal");

        jLabel9.setText("Telefono");

        jLabel10.setText("Correo");

        btnGuardarProvedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/salvarBoton.png"))); // NOI18N
        btnGuardarProvedores.setText("GUARDAR");
        btnGuardarProvedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProvedoresActionPerformed(evt);
            }
        });

        btnEditarProvedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/editarBoton.png"))); // NOI18N
        btnEditarProvedores.setText("EDITAR");
        btnEditarProvedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProvedoresActionPerformed(evt);
            }
        });

        btnEliminarProvedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/eliminarBoton.png"))); // NOI18N
        btnEliminarProvedores.setText("ELIMINAR");
        btnEliminarProvedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProvedoresActionPerformed(evt);
            }
        });

        jLabel11.setText("Buscar");

        conmboBoxBusquedaProvedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ruc", "Nombre", "Apellido", "Dirección", "Teléfono", "Correo", "Razón social", "" }));

        btnBuscarProvedor.setText("Buscar");
        btnBuscarProvedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProvedorActionPerformed(evt);
            }
        });

        jLabel21.setText("Direccion");

        jLabel22.setText("Fecha Vencimiento Deuda");

        tablaProvedores.setModel(modelTableProvedores);
        jScrollPane2.setViewportView(tablaProvedores);

        btnUltimoRegistroProvedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/atrasBoton.png"))); // NOI18N
        btnUltimoRegistroProvedor.setText("Ultimo Registro");
        btnUltimoRegistroProvedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoRegistroProvedorActionPerformed(evt);
            }
        });

        btnLimpiarProvedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/com.istl.recourse.img.png"))); // NOI18N
        btnLimpiarProvedor.setText("Limpiar");
        btnLimpiarProvedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarProvedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(conmboBoxBusquedaProvedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(txtPramatroBusquedaProvedor, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarProvedor))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(btnGuardarProvedores)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarProvedores)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarProvedores)
                        .addGap(18, 18, 18)
                        .addComponent(btnUltimoRegistroProvedor)
                        .addGap(25, 25, 25)
                        .addComponent(btnLimpiarProvedor, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(142, 142, 142))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateFechaVencimientoDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtxRazonSiocial)
                            .addComponent(txtTipo_actividad)
                            .addComponent(txtNombre_Representante_Legal)
                            .addComponent(txtApellido_Representante_legal)
                            .addComponent(txtTelefono_Provedores)
                            .addComponent(txtCorreo_provedores)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtxRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDireccionProvedores))))
                .addGap(141, 141, 141))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtxRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtxRazonSiocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTipo_actividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNombre_Representante_Legal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtApellido_Representante_legal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTelefono_Provedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCorreo_provedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtDireccionProvedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jDateFechaVencimientoDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEliminarProvedores)
                        .addComponent(btnEditarProvedores)
                        .addComponent(btnGuardarProvedores)
                        .addComponent(btnUltimoRegistroProvedor))
                    .addComponent(btnLimpiarProvedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(conmboBoxBusquedaProvedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPramatroBusquedaProvedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProvedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelProvedoresLayout = new javax.swing.GroupLayout(panelProvedores);
        panelProvedores.setLayout(panelProvedoresLayout);
        panelProvedoresLayout.setHorizontalGroup(
            panelProvedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProvedoresLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1092, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelProvedoresLayout.createSequentialGroup()
                .addGap(590, 590, 590)
                .addComponent(titulo_provedores, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelProvedoresLayout.setVerticalGroup(
            panelProvedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProvedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo_provedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(763, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Provedores", panelProvedores);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Inventario"));

        jLabel12.setText("CODIGO PRODUCTO");

        jLabel13.setText("DESCRIPCION");

        jLabel14.setText("PRECIO COMPRA_Sin Iva");

        jLabel15.setText("PRECIO MAYORISTA");

        txtprecioCompraInvntario_sinIva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtprecioCompraInvntario_sinIvaFocusLost(evt);
            }
        });

        jLabel17.setText("CANTIDAD");

        btnguardarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/salvarBoton.png"))); // NOI18N
        btnguardarInventario.setText("GUARDAR");
        btnguardarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarInventarioActionPerformed(evt);
            }
        });

        btneditarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/editarBoton.png"))); // NOI18N
        btneditarInventario.setText("EDITAR");
        btneditarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditarInventarioActionPerformed(evt);
            }
        });

        btneliminarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/eliminarBoton.png"))); // NOI18N
        btneliminarInventario.setText("ELIMINAR");
        btneliminarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarInventarioActionPerformed(evt);
            }
        });

        jLabel18.setText("BUSQUEDA");

        combo_busqueda_INVENTARIO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buscar Codigo", "Buscar Descripcion", "Buscar Producto Sin Iva", "Buscar Producto Con Iva", "Buscar Producto Cantidad" }));
        combo_busqueda_INVENTARIO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_busqueda_INVENTARIOActionPerformed(evt);
            }
        });

        txtParamtroBusquedaInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParamtroBusquedaInventarioActionPerformed(evt);
            }
        });
        txtParamtroBusquedaInventario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParamtroBusquedaInventarioKeyReleased(evt);
            }
        });

        btnBuscarComboboxInventario.setText("BUSCAR");
        btnBuscarComboboxInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarComboboxInventarioActionPerformed(evt);
            }
        });

        jLabel23.setText("PRECIO COMPRA_Con Iva");

        jLabel24.setText("PRECIO CLIENTE FIJO");

        jLabel25.setText("PRECIO CLIENTE NORMAL");

        jLabel31.setText("FechaCaducidad");

        tableInventario.setModel(modelTableInventario);
        jScrollPane3.setViewportView(tableInventario);

        btneLimpiarnventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/com.istl.recourse.img.png"))); // NOI18N
        btneLimpiarnventario.setText("Limpiar");
        btneLimpiarnventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneLimpiarnventarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(214, 214, 214)
                                .addComponent(jLabel12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel23)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel17)
                                                    .addComponent(jLabel13))
                                                .addGap(10, 10, 10))
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel25)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel24)
                                                .addComponent(jLabel15))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(jLabel31)))
                                        .addGap(9, 9, 9)))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtprecioMayoristaInventario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                                        .addComponent(txtdescripcionInventario, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtcatidadInventario, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtprecioCompraInvntario_sinIva, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtprecioCompraInvntario_conIva, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtcodigoProductoInvntario, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtPrecioClienteFijo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                                        .addComponent(txtPrecioClienteNormal, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jDateInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1073, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(388, 388, 388)
                        .addComponent(jLabel16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnguardarInventario)
                        .addGap(32, 32, 32)
                        .addComponent(btneditarInventario)
                        .addGap(49, 49, 49)
                        .addComponent(btneliminarInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btneLimpiarnventario)
                        .addGap(259, 259, 259))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(39, 39, 39)
                        .addComponent(combo_busqueda_INVENTARIO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtParamtroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarComboboxInventario)
                        .addGap(105, 105, 105))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtcodigoProductoInvntario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtdescripcionInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(txtprecioCompraInvntario_conIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtprecioMayoristaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrecioClienteFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(txtcatidadInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(txtprecioCompraInvntario_sinIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel23)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel16))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPrecioClienteNormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel31))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btneditarInventario)
                    .addComponent(btnguardarInventario)
                    .addComponent(btneliminarInventario)
                    .addComponent(btneLimpiarnventario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtParamtroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_busqueda_INVENTARIO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarComboboxInventario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        titulo_inventario.setText("Registro Inventario");

        javax.swing.GroupLayout panelInventarioLayout = new javax.swing.GroupLayout(panelInventario);
        panelInventario.setLayout(panelInventarioLayout);
        panelInventarioLayout.setHorizontalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInventarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titulo_inventario)
                .addGap(435, 435, 435))
            .addGroup(panelInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(101, 101, 101))
        );
        panelInventarioLayout.setVerticalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInventarioLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(titulo_inventario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(942, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Inventario", panelInventario);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ventas"));
        jPanel3.setToolTipText("");

        jLabel26.setBackground(new java.awt.Color(255, 153, 0));
        jLabel26.setText("Numero Nota Venta");

        jLabel27.setText("Cedula o Ruc");

        txtCedulaRucVentas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCedulaRucVentasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaRucVentasFocusLost(evt);
            }
        });

        jLabel28.setText("Nombre Cliente");

        jLabel29.setText("Telefono ");

        jLabel30.setText("Direccion");

        jLabel32.setText("Fecha de Venta");

        jLabel33.setText("ID PRODUCTO");

        txtIDproductoVenta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIDproductoVentaFocusLost(evt);
            }
        });
        txtIDproductoVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDproductoVentaKeyPressed(evt);
            }
        });

        jLabel34.setText("CANTIDAD");

        jTableVentas.setModel(modelTableVentaFinal);
        jScrollPane4.setViewportView(jTableVentas);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/editarBoton.png"))); // NOI18N
        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel35.setText("SUB.TOTAL");

        jLabel36.setText("IVA");

        jLabel37.setText("TOTAL");

        ButtonBusquedaAvanzada.setBackground(new java.awt.Color(255, 255, 255));
        ButtonBusquedaAvanzada.setForeground(new java.awt.Color(255, 102, 102));
        ButtonBusquedaAvanzada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/atrasBoton.png"))); // NOI18N
        ButtonBusquedaAvanzada.setText("BUSQUEDA AVANZADA");
        ButtonBusquedaAvanzada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonBusquedaAvanzadaMouseClicked(evt);
            }
        });

        jLabel38.setText("Tipo de Pago");

        ComboBoxTipodepago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta", "Item 3", "Item 4" }));

        ButtonGuadarNota_venta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/salvarBoton.png"))); // NOI18N
        ButtonGuadarNota_venta.setText("GUARDAR");
        ButtonGuadarNota_venta.setSize(new java.awt.Dimension(100, 39));
        ButtonGuadarNota_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuadarNota_ventaActionPerformed(evt);
            }
        });

        ButtonImprimir_venta.setText("IMPRIMIR");

        ButtonLimpiar_venta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istl/recourse/img/com.istl.recourse.img.png"))); // NOI18N
        ButtonLimpiar_venta.setText("LIMPIAR");
        ButtonLimpiar_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLimpiar_ventaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(jLabel26))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(796, 796, 796)
                                .addComponent(jLabel30)
                                .addGap(18, 18, 18)
                                .addComponent(txtxDireccionClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboBoxTipodepago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel37))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSubTotalVentaFinal)
                                    .addComponent(txtIvaVentaFinal)
                                    .addComponent(txtTotalVentaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 949, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel29)
                                            .addComponent(jLabel28)
                                            .addComponent(jLabel27))
                                        .addGap(46, 46, 46)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNumerodeNotadeVenta)
                                            .addComponent(txtCedulaRucVentas)
                                            .addComponent(txtNombreClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTelefonoVentasCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(200, 200, 200)
                                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel33)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtIDproductoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel34)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCantidadProductoVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ButtonBusquedaAvanzada)
                                    .addComponent(jDateFechaVentaClientefinal, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addComponent(ButtonGuadarNota_venta)
                .addGap(53, 53, 53)
                .addComponent(ButtonImprimir_venta)
                .addGap(53, 53, 53)
                .addComponent(ButtonLimpiar_venta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel29))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNumerodeNotadeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCedulaRucVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTelefonoVentasCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(txtxDireccionClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(jDateFechaVentaClientefinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txtIDproductoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(txtCantidadProductoVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(ButtonBusquedaAvanzada))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txtSubTotalVentaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(ComboBoxTipodepago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(txtIvaVentaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtTotalVentaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonGuadarNota_venta)
                    .addComponent(ButtonImprimir_venta)
                    .addComponent(ButtonLimpiar_venta))
                .addContainerGap(219, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelVentaLayout = new javax.swing.GroupLayout(panelVenta);
        panelVenta.setLayout(panelVentaLayout);
        panelVentaLayout.setHorizontalGroup(
            panelVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(titulo_venta)
                .addGap(74, 74, 74))
        );
        panelVentaLayout.setVerticalGroup(
            panelVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titulo_venta)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1003, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Venta", panelVenta);

        Menu_general.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        menuArchivo.setText("Archivo");
        menuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuArchivoActionPerformed(evt);
            }
        });

        jMenu6.setText("Acciones Persona");

        subMenuBuscarPersona.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        subMenuBuscarPersona.setText("Buscar ");
        subMenuBuscarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuBuscarPersonaActionPerformed(evt);
            }
        });
        jMenu6.add(subMenuBuscarPersona);

        subMenuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        subMenuGuardar.setText("Guardar");
        subMenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuGuardarActionPerformed(evt);
            }
        });
        jMenu6.add(subMenuGuardar);

        subMenuEditar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        subMenuEditar.setText("Editar");
        subMenuEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuEditarActionPerformed(evt);
            }
        });
        jMenu6.add(subMenuEditar);

        subMenuEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, java.awt.event.InputEvent.CTRL_MASK));
        subMenuEliminar.setText("Eliminar");
        subMenuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuEliminarActionPerformed(evt);
            }
        });
        jMenu6.add(subMenuEliminar);

        menuArchivo.add(jMenu6);

        subMenuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        subMenuSalir.setText("Salir");
        subMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(subMenuSalir);

        Menu_general.add(menuArchivo);

        jMenu2.setText("Editar");
        Menu_general.add(jMenu2);

        jMenu4.setText("Acerca de");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Acerca de Nosotros");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        Menu_general.add(jMenu4);

        setJMenuBar(Menu_general);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(tabGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 1119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(823, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabGeneral)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

// Funcionalidad es del Boton en un metodo para reutilizar Codigo
    public void botonguardarPersona() {
        if (controladorPersona.getPersonaCedula(txtCedula.getText()) != null) {
            JOptionPane.showMessageDialog(rootPane, "La Persona con ese numero de cedula ya se encuentra en el Sistema", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Persona personaGuardar = gestionPersona.guardarEditar(false);
            if (jDateFechaNacimiento.getDate() != null) {
                personaGuardar.setFecha_de_nacimiento(jDateFechaNacimiento.getDate());
            }
            if (personaGuardar != null) {
                if (controladorPersona.crearPersona(personaGuardar)) {
                    JOptionPane.showMessageDialog(rootPane, "Persona Registrada Corectamente en el sistema.");
                    gestionPersona.vaciarCajasPersona();
                    actulizarTodalatablaPersonas();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error al registrar Persona");
                }
                //persona.mostrarResultado();
            }

        }

    }

    public void botonEditarPersona() {

        if (personaEditar != null) { // validamos que exista una persona para Editar 
            JOptionPane.showMessageDialog(rootPane, "No hay una persona seleccionada para Editar !", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Persona personaEditarLocal = gestionPersona.guardarEditar(true);

        if (personaEditarLocal != null) {// Comprobamos que la persona este corectamente valiadada los campos
            personaEditarLocal.setFechaRegistro(personaEditar.getFechaRegistro());
            personaEditarLocal.setIdPersona(personaEditar.getIdPersona());
            if (controladorPersona.modificarPersona(personaEditarLocal)) { // Sila perona se edito corectamente
                JOptionPane.showMessageDialog(rootPane, "Persona editada con exito en el Sitema");
                gestionPersona.vaciarCajasPersona();
                personaEditar = null; // Dejamos la persona en vacio si se desea busca se tendra que ingresar una nueva Persona
                actulizarTodalatablaPersonas();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo Editar la Persona !", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }

    public void buscarPersonaporCedula() {
//
//        Persona persona = controladorPersona.getPersonaCedula(txtCedula.getText());
//
//        if (persona != null) {
//            txtCedula.setText(persona.getCedula());
//            txtNombre.setText(persona.getNombre());
//            txtApellido.setText(persona.getApellido());
//            txtDireccion.setText(persona.getDireccion());
//            txtTelefono.setText(persona.getTelefono());
//            txtCorreo.setText(persona.getCorreo());
//            personaEditar = persona;
//
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "Persona no encontrada en el sistema", "Error", JOptionPane.ERROR_MESSAGE);
//            txtCedula.setText(null);
//            txtCedula.requestFocus();
//        }

        if (radioBotonCedula.isSelected()) {

            JOptionPane.showMessageDialog(rootPane, "sELECIONEASTE Cedula");

            Utilidades ced = new Utilidades();
            if (ced.validadorDeCedula(txtCedula.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Cedula Valida");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Cedula no valida");
            }

        } else if (radioBotonPasaporte.isSelected()) {
            JOptionPane.showMessageDialog(rootPane, "Seleccionaste Pasaporte");
        } else {
            JOptionPane.showMessageDialog(rootPane, "ingresa una cedula Valida");
        }

    }

    public void botonEliminarPersona() {// Funcionalidad del Boton Eliminar 
        if (personaEditar != null) {
            if (controladorPersona.eliminarPersona(personaEditar)) {
                JOptionPane.showMessageDialog(rootPane, "Persona Eliminada con exito en el Sitema");
                gestionPersona.vaciarCajasPersona();
                actulizarTodalatablaPersonas();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se Puedo eliminar la Persona seleccionada", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "No Existe persona para Editar", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }/// mETODOS PARA iNVNTARIO ++++++++++++++****

    public void actualizarInventario() {
        List<Inventario> invent = controladorinvetario.obtenerInventario();
        modelTableInventario.setInventarios(invent);
        modelTableInventario.fireTableDataChanged();
    }

    public void guardarInventario() {
        Inventario inventarioGuardar = gestionInventario.guardarEditarInventario(false);
        if (jDateFechaNacimiento.getDate() != null) {
            inventarioGuardar.setFecha_caducidad(jDateInventario.getDate());
        }
        if (inventarioGuardar != null) {
            if (controladorinvetario.insertarProducto(inventarioGuardar)) {
                JOptionPane.showMessageDialog(rootPane, "Inventario registrada en el sistema.");
                gestionInventario.limpiarInventario();
                actualizarInventario();

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede guardar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }
    }

    public void editarInvebtario() {
        if (inventarioEditarSeleccionado == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay una Producto seleccionada para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Inventario invent = gestionInventario.guardarEditarInventario(true);
        if (invent != null) {
            invent.setFecha_registro(inventarioEditarSeleccionado.getFecha_registro());
            invent.setId_inventario(inventarioEditarSeleccionado.getId_inventario());
            if (controladorinvetario.actualizarInventario(invent)) {
                JOptionPane.showMessageDialog(rootPane, "Producto editado con exito del sitema.");
                gestionInventario.limpiarInventario();
                inventarioEditarSeleccionado = null;
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede editar el Producto", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void eliminarInventario() {
        if (inventarioEditarSeleccionado != null) {
            inventarioEditarSeleccionado.setId_inventario(inventarioEditarSeleccionado.getId_inventario());
            if (controladorinvetario.eliminarInventario(inventarioEditarSeleccionado)) {
                JOptionPane.showMessageDialog(rootPane, "Inventario eliminada con exito del sitema.");
                gestionInventario.limpiarInventario();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar el Inventario", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }

    }
// Metodo para  Provedores ********

    public void GuardarProvedores() {
        if (controladorprovedor.buscarCodigoProvedores(txtxRuc.getText()) != null) {
            JOptionPane.showMessageDialog(rootPane, "La persona con este código ya se encuentra registrada en el sistema.");
        } else {
            Provedores provedoresGuardar = gestionProvedores.guardarEditarProvedores(false);
            if (jDateFechaVencimientoDeuda.getDate() != null) {
                provedoresGuardar.setFechaVencimientoDeuda(jDateFechaVencimientoDeuda.getDate());
            }
            if (provedoresGuardar != null) {
                if (controladorprovedor.registrarProvedores(provedoresGuardar)) {
                    JOptionPane.showMessageDialog(rootPane, "Proveedor registrada en el sistema.");
                    gestionProvedores.limpiar_Caja_Provedores();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede guardar este Proveedor", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void editarProvedores() {
        if (editarProvedores == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay una persona seleccionada para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Provedores editarProvedorLocal = gestionProvedores.guardarEditarProvedores(true);
        if (editarProvedorLocal != null) {
            editarProvedorLocal.setFechaRegistro(editarProvedores.getFechaRegistro());
            editarProvedorLocal.setIdProvedores(editarProvedores.getIdProvedores());
            if (controladorprovedor.actualizarProvedores(editarProvedorLocal)) {
                JOptionPane.showMessageDialog(rootPane, "Persona editada con exito del sitema.");
                gestionProvedores.limpiar_Caja_Provedores();
                editarProvedores = null;
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede editar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    public void actualizarProvedores() {
        List<Provedores> provedoresAct = controladorprovedor.obtenerProvedores();
        modelTableProvedores.setProvedores(provedoresAct);
        modelTableProvedores.fireTableDataChanged();
    }

    public void eliminarProvedores() {
        if (editarProvedores != null) {
            editarProvedores.setIdProvedores(editarProvedores.getIdProvedores());
            if (controladorprovedor.eliminarProvedores(editarProvedores)) {
                JOptionPane.showMessageDialog(rootPane, "Persona eliminada con exito del sitema.");
                gestionProvedores.limpiar_Caja_Provedores();
                editarProvedores = null;
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar a la persona", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void buscarProvedoresParametros() {
        if (conmboBoxBusquedaProvedor.getSelectedItem().equals("Ruc")) {
            List<Provedores> provedoresCodigoRuc = controladorprovedor.obtenerProvedoresRuc(txtPramatroBusquedaProvedor.getText());
            modelTableProvedores.setProvedores(provedoresCodigoRuc);
            modelTableProvedores.fireTableDataChanged();
        } else if (conmboBoxBusquedaProvedor.getSelectedIndex() == 1) {
            List<Provedores> provedoresNombre = controladorprovedor.obtenerProvedoresNombre(txtPramatroBusquedaProvedor.getText());
            modelTableProvedores.setProvedores(provedoresNombre);
            modelTableProvedores.fireTableDataChanged();
        } else if (conmboBoxBusquedaProvedor.getSelectedIndex() == 2) {
            List<Provedores> provedoresApellido = controladorprovedor.obtenerProvedoresApellido(txtPramatroBusquedaProvedor.getText());
            modelTableProvedores.setProvedores(provedoresApellido);
            modelTableProvedores.fireTableDataChanged();
        } else if (conmboBoxBusquedaProvedor.getSelectedIndex() == 3) {
            List<Provedores> provedoresDireccion = controladorprovedor.obtenerProvedoresDireccion(txtPramatroBusquedaProvedor.getText());
            modelTableProvedores.setProvedores(provedoresDireccion);
            modelTableProvedores.fireTableDataChanged();
        } else if (conmboBoxBusquedaProvedor.getSelectedItem().equals("Telefono")) {
            List<Provedores> provedoresTelefono = controladorprovedor.obtenerProvedoresTelefono(txtPramatroBusquedaProvedor.getText());
            modelTableProvedores.setProvedores(provedoresTelefono);
            modelTableProvedores.fireTableDataChanged();
        } else if (conmboBoxBusquedaProvedor.getSelectedIndex() == 5) {
            List<Provedores> personaCorreo = controladorprovedor.obtenerProvedoresCorreo(txtPramatroBusquedaProvedor.getText());
            modelTableProvedores.setProvedores(personaCorreo);
            modelTableProvedores.fireTableDataChanged();
        } else if (conmboBoxBusquedaProvedor.getSelectedIndex() == 6) {
            List<Provedores> provedoresServicio = controladorprovedor.obtenerProvedoresRazonsocial(txtPramatroBusquedaProvedor.getText());
            modelTableProvedores.setProvedores(provedoresServicio);
            modelTableProvedores.fireTableDataChanged();
        }

    }

    public void traerUltimoProvedorRegistro() {
        List<Provedores> obtenerUltimoprovedor = controladorprovedor.obtenerProvedores();
        Provedores provedores = obtenerUltimoprovedor.get(obtenerUltimoprovedor.size() - 1);
        System.out.println(provedores);
        txtxRuc.setText(provedores.getRuc());
        txtxRazonSiocial.setText(provedores.getRazonSocial());
        txtTipo_actividad.setText(provedores.getTipoActividad());
        txtNombre_Representante_Legal.setText(provedores.getNombreRepresentanteLegal());
        txtApellido_Representante_legal.setText(provedores.getApellidoRepresentanteLegal());
        txtTelefono_Provedores.setText(provedores.getTelefono());
        txtCorreo_provedores.setText(provedores.getCorreo());
        txtDireccionProvedores.setText(provedores.getDireccion());
        jDateFechaVencimientoDeuda.setDate(provedores.getFechaVencimientoDeuda());
    }

    List<Venta> ventasFinal;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String idProductoVenta = txtIDproductoVenta.getText();

        if (idProductoVenta != null && !idProductoVenta.isEmpty()) {
            Inventario obtenerInventarioVenta = controladorinvetario.getInventarioParaCodigo(txtIDproductoVenta.getText());
            if (obtenerInventarioVenta != null) {
                obtenerInventarioVenta.setCantidadProdVenta(Integer.parseInt(txtCantidadProductoVentas.getText()));
                Venta venta = new Venta();
                venta.setIdProductoInventario(obtenerInventarioVenta.getId_inventario());
                venta.setCantidad(obtenerInventarioVenta.getCantidadProdVenta());
                venta.setDescripcioPventa(obtenerInventarioVenta.getDescripcion());
                //Esta linea nos ayuda a calcular el valor del producto sin iva
                double valorTsinIva = (obtenerInventarioVenta.getPrecio_cliente_normal() / 1.12);
                venta.setSubtotal(utilidades.dosDecimalesVenta(valorTsinIva));
                venta.setTotal(utilidades.dosDecimalesVenta(valorTsinIva * obtenerInventarioVenta.getCantidadProdVenta()));
                ventasFinal.add(venta);
                PreciosFinalesVenta();
                modelTableVentaFinal.setProductoVenta(ventasFinal);
                modelTableVentaFinal.fireTableDataChanged();
            } else {
                JOptionPane.showMessageDialog(this, "No se encuentra codigo del producto para ingresar ", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encuentra codigo del producto para ingresar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        txtIDproductoVenta.setText("");
        txtCantidadProductoVentas.setText("");

    }//GEN-LAST:event_jButton1ActionPerformed
    public void PreciosFinalesVenta() {
        double subtotalVentaFinal = 0;
        double ivaFinalVenta = 0;
        double precioTotalVentafinal = 0;
        if (!ventasFinal.isEmpty()) {
            for (Venta venta : ventasFinal) {
                subtotalVentaFinal = subtotalVentaFinal + (venta.getSubtotal() * venta.getCantidad());
            }
            ivaFinalVenta = subtotalVentaFinal * 0.12;
            precioTotalVentafinal = subtotalVentaFinal + ivaFinalVenta;

            //Seteamos los datos en los campos :
            txtSubTotalVentaFinal.setText(String.valueOf(utilidades.dosDecimalesVenta(subtotalVentaFinal)));
            txtIvaVentaFinal.setText(String.valueOf(utilidades.dosDecimalesVenta(ivaFinalVenta)));
            txtTotalVentaFinal.setText(String.valueOf(utilidades.dosDecimalesVenta(precioTotalVentafinal)));
            //devolverformatoDecimal
        } else {
            txtSubTotalVentaFinal.setText(String.valueOf(subtotalVentaFinal));
            txtIvaVentaFinal.setText(String.valueOf(ivaFinalVenta));
            txtTotalVentaFinal.setText(String.valueOf(precioTotalVentafinal));
        }

    }

    private void txtIDproductoVentaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIDproductoVentaFocusLost

    }//GEN-LAST:event_txtIDproductoVentaFocusLost

    private void txtCedulaRucVentasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaRucVentasFocusLost

        CargarPersonasVentas();

    }//GEN-LAST:event_txtCedulaRucVentasFocusLost

    private void btnUltimoRegistroProvedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoRegistroProvedorActionPerformed
        traerUltimoProvedorRegistro();
    }//GEN-LAST:event_btnUltimoRegistroProvedorActionPerformed

    private void btnBuscarProvedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProvedorActionPerformed
        if (txtPramatroBusquedaProvedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No hay datos. Por favor ingresar datos a buscar", "ERROR", JOptionPane.ERROR_MESSAGE);

        } else {
            buscarProvedoresParametros();
        }
    }//GEN-LAST:event_btnBuscarProvedorActionPerformed

    private void btnEliminarProvedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProvedoresActionPerformed
        eliminarProvedores();
        actualizarProvedores();
    }//GEN-LAST:event_btnEliminarProvedoresActionPerformed

    private void btnEditarProvedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProvedoresActionPerformed

        editarProvedores();
        actualizarProvedores();
    }//GEN-LAST:event_btnEditarProvedoresActionPerformed

    private void btnGuardarProvedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProvedoresActionPerformed
        //        Provedores provedores = new Provedores();
        //        provedores.setRuc(txtxRuc.getText());
        //        provedores.setRazonSocial(txtxRazonSiocial.getText());
        //        provedores.setTipoActividad(txtTipo_actividad.getText());
        //        provedores.setNombreRepresentanteLegal(txtNombre_Representante_Legal.getText());
        //        provedores.setApellidoRepresentanteLegal(txtApellido_Representante_legal.getText());
        //        provedores.setTelefono(txtTelefono_Provedores.getText());
        //        provedores.setCorreo(txtCorreo_provedores.getText());
        //        if (controladorprovedor.registrarProvedores(provedores)) {
        //            JOptionPane.showMessageDialog(null, "Se Gegistro Correctamente el Provedor");
        //            vaciarProvedores();
        //            modelTableProvedores.setProvedores(controladorprovedor.obtenerProvedores());
        //            modelTableProvedores.fireTableDataChanged();
        //
        //        } else {
        //
        //            JOptionPane.showMessageDialog(rootPane, "No se pudo Guardar la Provedor !", "Error", JOptionPane.ERROR_MESSAGE);
        //        }
        GuardarProvedores();
        actualizarProvedores();
    }//GEN-LAST:event_btnGuardarProvedoresActionPerformed

    /**
     * Funcion : este metodo realiza una busquesa de persona de Acuerso a tu
     * opcion en el Jcombobox
     *
     * @return :Este parameto no devuele ningun valor
     *
     */
    private void btnBuscarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPersonaActionPerformed
        //        controladorPersona.getPersonaCedula(txtParametroBusquedaPersona.getText());
        //        List<Persona> personas = new ArrayList<>();
        //        personas.add(controladorPersona.getPersonaCedula(txtParametroBusquedaPersona.getText()));
        //        modelTablePersona.setPersonas(personas);
        //        modelTablePersona.fireTableDataChanged();
        ////        List<Persona> personaNombre = controladorPersona.getPersonaNombre(txtParametroBusquedaPersona.getText());
        ////        modelTablePersona.setPersonas(personaNombre);
        ////        modelTablePersona.fireTableDataChanged();

        if (comboParametroBusquedaPersona.getSelectedItem().equals("Cedula")) {
            List<Persona> personas = new ArrayList<>();
            personas.add(controladorPersona.getPersonaCedula(txtParametroBusquedaPersona.getText()));
            modelTablePersona.setPersonas(personas);
            modelTablePersona.fireTableDataChanged();

        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }
        if (comboParametroBusquedaPersona.getSelectedItem().equals("Nombre")) {
            List<Persona> personaNombre = controladorPersona.getPersonaNombre(txtParametroBusquedaPersona.getText());
            modelTablePersona.setPersonas(personaNombre);
            modelTablePersona.fireTableDataChanged();
            txtParametroBusquedaPersona.setText(null);
        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }

        if (comboParametroBusquedaPersona.getSelectedItem().equals("Apellido")) {
            List<Persona> personaNombre = controladorPersona.getPersonaApellido(txtParametroBusquedaPersona.getText());
            modelTablePersona.setPersonas(personaNombre);
            modelTablePersona.fireTableDataChanged();
            txtParametroBusquedaPersona.setText(null);
        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }
        if (comboParametroBusquedaPersona.getSelectedItem().equals("Correo")) {
            List<Persona> personaNombre = controladorPersona.getPersonaCorreo(txtParametroBusquedaPersona.getText());
            modelTablePersona.setPersonas(personaNombre);
            modelTablePersona.fireTableDataChanged();
            txtParametroBusquedaPersona.setText(null);
        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }
    }//GEN-LAST:event_btnBuscarPersonaActionPerformed

    private void txtParametroBusquedaPersonaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParametroBusquedaPersonaKeyReleased
        System.out.println("Conmo Registrar Personas:" + comboParametroBusquedaPersona.getSelectedIndex());
        switch (comboParametroBusquedaPersona.getSelectedIndex()) {
            case 0:
                modelTablePersona.setPersonas(controladorPersona.obtenerPersonaCedula(txtParametroBusquedaPersona.getText()));
                modelTablePersona.fireTableDataChanged();

                break;
            case 1:
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_txtParametroBusquedaPersonaKeyReleased

    private void comboParametroBusquedaPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboParametroBusquedaPersonaActionPerformed

    }//GEN-LAST:event_comboParametroBusquedaPersonaActionPerformed

    private void BotonBuscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarCedulaActionPerformed
        buscarPersonaporCedula();
    }//GEN-LAST:event_BotonBuscarCedulaActionPerformed

    private void radioBotonCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBotonCedulaActionPerformed

    }//GEN-LAST:event_radioBotonCedulaActionPerformed

    private void radioBotonCedulaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioBotonCedulaItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            radioBotonPasaporte.setSelected(false);
        }
    }//GEN-LAST:event_radioBotonCedulaItemStateChanged

    private void botonLimpiarCajas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarCajas1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonLimpiarCajas1ActionPerformed

    private void radioBotonPasaporteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioBotonPasaporteItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            radioBotonCedula.setSelected(false);
        }
    }//GEN-LAST:event_radioBotonPasaporteItemStateChanged

    private void botonLimpiarCajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarCajasActionPerformed
        gestionPersona.vaciarCajasPersona();
    }//GEN-LAST:event_botonLimpiarCajasActionPerformed

    private void botonTraerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTraerActionPerformed
        List<Persona> listapersona = controladorPersona.obtenerPersona(); // me retona una lista de personas
        personaEditar = listapersona.get(listapersona.size() - 1); // Obtengo la ultima persona de mi arreglo pongo -1 porque sixw cominexa desde 1 y el indice es desde 0

        txtCedula.setText(personaEditar.getCedula());   // Mostramos el cada casilla el dato de la persona
        txtNombre.setText(personaEditar.getNombre());
        txtApellido.setText(personaEditar.getApellido());
        txtDireccion.setText(personaEditar.getDireccion());
        txtTelefono.setText(personaEditar.getTelefono());
        txtCorreo.setText(personaEditar.getCorreo());
        ComboBoxGeneroPersona.setSelectedIndex(personaEditar.getGenero());
    }//GEN-LAST:event_botonTraerActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        botonEliminarPersona();
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed

        botonEditarPersona();
    }//GEN-LAST:event_botonEditarActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed

        botonguardarPersona();
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void txtCedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusLost
        txtCedula.setBackground(Color.white);
        txt45.setText("");
        if (!txtCedula.getText().isEmpty()) {
            if (radioBotonCedula.isSelected()) {
                if (txtCedula.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El campo cedula no tiene datos.", "ERROR", JOptionPane.ERROR_MESSAGE);
                    txtCedula.requestFocus();// Sirve para ubicar el cursor en un campo vacio.
                } else if (!utilidades.validadorDeCedula(txtCedula.getText())) {
                    JOptionPane.showMessageDialog(this, "la cedula ingresada no es valida", "ERROR", JOptionPane.ERROR_MESSAGE);
                    txtCedula.setBackground(Color.white);
                    txtCedula.requestFocus();
                }
            }
            if (radioBotonPasaporte.isSelected()) {
                if (txtCedula.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El campo DNI no tiene datos.", "ERROR", JOptionPane.ERROR_MESSAGE);
                    txtCedula.requestFocus();// Sirve para ubicar el cursor en un campo vacio.
                }
            }
        }

    }//GEN-LAST:event_txtCedulaFocusLost

    private void txtCedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusGained
        txtCedula.setBackground(Color.decode("#F2EB0C"));
        txt45.setText("Ingresa por favor tu Dni");
    }//GEN-LAST:event_txtCedulaFocusGained

    private void BotonBuscarTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarTelefonoActionPerformed
        Persona persona = controladorPersona.getPersonaTelefono(txtTelefono.getText());
        if (persona != null) {
            txtCedula.setText(persona.getCedula());
            txtNombre.setText(persona.getNombre());
            txtApellido.setText(persona.getApellido());
            txtDireccion.setText(persona.getDireccion());
            txtTelefono.setText(persona.getTelefono());
            txtCorreo.setText(persona.getCorreo());
            personaEditar = persona;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Persona no encontrada en el sistema", "Error", JOptionPane.ERROR_MESSAGE);
            txtTelefono.setText(null);
            txtTelefono.requestFocus();
        }
    }//GEN-LAST:event_BotonBuscarTelefonoActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Creada en 2021 en el Istituto tecnologico loja", "Acerca de Nosotros", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        Acercade dialogo = new Acercade(this, true);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Creada en 2021 en el Istituto tecnologico loja");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked

    }//GEN-LAST:event_jMenuItem1MouseClicked

    private void menuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuArchivoActionPerformed

    private void subMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_subMenuSalirActionPerformed

    private void subMenuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subMenuEliminarActionPerformed

    private void subMenuEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuEditarActionPerformed
        botonEditarPersona();
    }//GEN-LAST:event_subMenuEditarActionPerformed

    private void subMenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuGuardarActionPerformed
        botonguardarPersona();
    }//GEN-LAST:event_subMenuGuardarActionPerformed

    private void subMenuBuscarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuBuscarPersonaActionPerformed
        buscarPersonaporCedula();
    }//GEN-LAST:event_subMenuBuscarPersonaActionPerformed

    private void btnBuscarComboboxInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarComboboxInventarioActionPerformed

        //        System.out.println(combo_busqueda_INVENTARIO.getSelectedIndex());
        switch (combo_busqueda_INVENTARIO.getSelectedIndex()) {
            case 0://Codigo
                modelTableInventario.setInventarios(controladorinvetario.obetenerProdctoInventarioCodgo(txtParamtroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();

                break;
            case 1://Descripcion
                modelTableInventario.setInventarios(controladorinvetario.obetenerProdctoInventarioDescripcion(txtParamtroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
            default:

        }
    }//GEN-LAST:event_btnBuscarComboboxInventarioActionPerformed

    private void btneliminarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarInventarioActionPerformed
        //        if (inventarioEditarSeleccionado != null) {
        //            if (controladorinvetario.eliminarInventario(inventarioEditarSeleccionado)) {
        //                JOptionPane.showMessageDialog(rootPane, "Producto Eliminado con exito en el Sitema");
        //                vaciarInventario();
        //                modelTableInventario.setInventarios(controladorinvetario.obtenerInventario());
        //                modelTableInventario.fireTableDataChanged();
        //            } else {
        //                JOptionPane.showMessageDialog(rootPane, "No se Puedo eliminar El Producto seleccionada", "Error", JOptionPane.ERROR_MESSAGE);
        //            }
        //
        //        } else {
        //            JOptionPane.showMessageDialog(rootPane, "No Existe Producto para Eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        //        }
        eliminarInventario();
        actualizarInventario();
    }//GEN-LAST:event_btneliminarInventarioActionPerformed

    private void btneditarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditarInventarioActionPerformed
        //        if (inventarioEditarSeleccionado == null) { // validamos que exista una persona para Editar
        //            JOptionPane.showMessageDialog(rootPane, "No hay una Producto seleccionada para Editar !", "Error", JOptionPane.ERROR_MESSAGE);
        //            return;
        //        }
        //
        //        if (inventarioEditarSeleccionado != null) {// Comprobamos que la persona este corectamente valiadada los campos
        //            inventarioEditarSeleccionado = valoresActualizadosInventario(inventarioEditarSeleccionado);
        //            if (controladorinvetario.actualizarInventario(inventarioEditarSeleccionado)) { // Sila perona se edito corectamente
        //                JOptionPane.showMessageDialog(rootPane, "Producto editado con exito en el Sitema");
        //                vaciarInventario();
        //                inventarioEditarSeleccionado = null;
        //                modelTableInventario.setInventarios(controladorinvetario.obtenerInventario());
        //                modelTableInventario.fireTableDataChanged();
        //
        //            } else {
        //                JOptionPane.showMessageDialog(rootPane, "No se pudo Editar el Producto !", "Error", JOptionPane.ERROR_MESSAGE);
        //            }
        //
        //        }
        editarInvebtario();
        actualizarInventario();
    }//GEN-LAST:event_btneditarInventarioActionPerformed

    private void btnguardarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarInventarioActionPerformed
        //        Inventario inventario = new Inventario();
        //        inventario.setCodigo_pro(txtcodigoProductoInvntario.getText());
        //        inventario.setDescripcion(txtdescripcionInventario.getText());
        ////        inventario.setPrecio_compra(txtprecioCompraInvntario_sinIva.getText());
        ////        inventario.setPrecio_venta(txtprecioCompraInvntario_conIva.getText());
        //        inventario.setCan_productos(txtcatidadInventario.getText());
        //
        //        if (utilidades.validarInventario(txtcodigoProductoInvntario.getText())) {
        //            controladorinvetario.insertarProducto(inventario);
        //            JOptionPane.showMessageDialog(null, "Se Gegistro Correctamente el Producto");
        //            vaciarInventario();
        //            modelTableInventario.setInventarios(controladorinvetario.obtenerInventario());
        //            modelTableInventario.fireTableDataChanged();
        //        } else {
        //            JOptionPane.showMessageDialog(rootPane, "No se pudo Guardar la Inventario el Codigo Solo Numeros!", "Error", JOptionPane.ERROR_MESSAGE);
        //        }
        guardarInventario();
    }//GEN-LAST:event_btnguardarInventarioActionPerformed

    private void txtprecioCompraInvntario_sinIvaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtprecioCompraInvntario_sinIvaFocusLost
        String precioCompraSinIva = txtprecioCompraInvntario_sinIva.getText();
        double precioCompraConIva = (Double.parseDouble(precioCompraSinIva) * 0.12) + Double.parseDouble(precioCompraSinIva);
        txtprecioCompraInvntario_conIva.setText("" + utilidades.devolverformatoDecimal(precioCompraConIva));
        double precioMayorista = (precioCompraConIva * 0.10) + precioCompraConIva;
        txtprecioMayoristaInventario.setText("" + utilidades.devolverformatoDecimal(precioMayorista));
        double precioClienteFijo = (precioCompraConIva * 0.12) + precioCompraConIva;
        txtPrecioClienteFijo.setText("" + utilidades.devolverformatoDecimal(precioClienteFijo));
        double precioClienteNormal = (precioCompraConIva * 0.15) + precioCompraConIva;
        txtPrecioClienteNormal.setText("" + utilidades.devolverformatoDecimal(precioClienteNormal));
    }//GEN-LAST:event_txtprecioCompraInvntario_sinIvaFocusLost

    private void btnLimpiarProvedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarProvedorActionPerformed
        gestionProvedores.limpiar_Caja_Provedores();
    }//GEN-LAST:event_btnLimpiarProvedorActionPerformed

    private void btneLimpiarnventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneLimpiarnventarioActionPerformed
        gestionInventario.limpiarInventario();
    }//GEN-LAST:event_btneLimpiarnventarioActionPerformed

    private void txtParamtroBusquedaInventarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParamtroBusquedaInventarioKeyReleased
        // txtParamtroBusquedaInventario
        System.out.println("busqueda inventario:" + combo_busqueda_INVENTARIO.getSelectedIndex());
        switch (combo_busqueda_INVENTARIO.getSelectedIndex()) {
            // si selecciona Codigo 
            case 0:
                modelTableInventario.setInventarios(controladorinvetario.obetenerProdctoInventarioCodgo(txtParamtroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
            // si selecciona Descripcion
            case 1:
                modelTableInventario.setInventarios(controladorinvetario.obetenerProdctoInventarioDescripcion(txtParamtroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
            // si selecciona precio sin iva 
            case 2:
                modelTableInventario.setInventarios(controladorinvetario.obetenerProdctoInventarioCompraSinIva(txtParamtroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
            // si selecciona precio con iva
            case 3:
                modelTableInventario.setInventarios(controladorinvetario.obetenerProdctoInventarioCompraConIva(txtParamtroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
            // si selecciona cantidad
            case 4:
                modelTableInventario.setInventarios(controladorinvetario.obetenerProdctoInventarioCantidad(txtParamtroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
            default:
                JOptionPane.showMessageDialog(this, "Error Selecion no valida Buscar Inventario combo box", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtParamtroBusquedaInventarioKeyReleased

    private void combo_busqueda_INVENTARIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_busqueda_INVENTARIOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_busqueda_INVENTARIOActionPerformed

    private void txtCedulaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCedulaMouseEntered
        txtCedula.setBackground(Color.YELLOW);

    }//GEN-LAST:event_txtCedulaMouseEntered

    private void txtCedulaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCedulaMouseExited
        txtCedula.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtCedulaMouseExited

    private void txtCedulaRucVentasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaRucVentasFocusGained
        txtCedulaRucVentas.setText("");
        txtNombreClienteVentas.setText("");
        txtTelefonoVentasCliente.setText("");
        txtxDireccionClienteVentas.setText("");
        personaEditarLocalNotaventa = null;
    }//GEN-LAST:event_txtCedulaRucVentasFocusGained

    private void txtIDproductoVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDproductoVentaKeyPressed
//       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//        }
    }//GEN-LAST:event_txtIDproductoVentaKeyPressed

    private void ButtonBusquedaAvanzadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonBusquedaAvanzadaMouseClicked

        BusquedaAvanzadaVentas busquedaAvanzadaVentas = new BusquedaAvanzadaVentas(this, true, modelTableInventario, controladorinvetario);
        busquedaAvanzadaVentas.setVisible(true);
    }//GEN-LAST:event_ButtonBusquedaAvanzadaMouseClicked

    private void txtParamtroBusquedaInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParamtroBusquedaInventarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParamtroBusquedaInventarioActionPerformed
public void LimpiarNotaventa(){
 txtCedulaRucVentas.setText(null);
        txtNombreClienteVentas.setText(null);
        txtTelefonoVentasCliente.setText(null);
        txtxDireccionClienteVentas.setText(null);
        jDateFechaVentaClientefinal.setDate(null);
        txtSubTotalVentaFinal.setText(null);
        txtIvaVentaFinal.setText(null);
        txtTotalVentaFinal.setText(null);
        ventasFinal.clear();
        modelTableVentaFinal.setProductoVenta(ventasFinal);
        modelTableVentaFinal.fireTableDataChanged();
        txtNumerodeNotadeVenta.requestFocus();
}
    private void ButtonLimpiar_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLimpiar_ventaActionPerformed
       LimpiarNotaventa();
    }//GEN-LAST:event_ButtonLimpiar_ventaActionPerformed
    private Persona p;
    private void ButtonGuadarNota_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuadarNota_ventaActionPerformed
        if (personaEditarLocalNotaventa == null) {
            JOptionPane.showMessageDialog(this, "No hay un cliente seleccionado.", "ERROR", JOptionPane.ERROR_MESSAGE); 
        }
        Nota_de_venta nota_de_venta = new Nota_de_venta();
        nota_de_venta.setNumeroNotaVenta(txtNumerodeNotadeVenta.getText());
        nota_de_venta.setPersonaIdPersona(personaEditarLocalNotaventa.getIdPersona());
        System.out.println("Aqui esta el id"+personaEditarLocalNotaventa.getIdPersona());
        nota_de_venta.setFechaVenta(utilidades.devolverFechaactual2(utilidades.devolverFechaactual()));
        nota_de_venta.setSubTotal(Double.parseDouble(txtSubTotalVentaFinal.getText()));
        nota_de_venta.setIva(Double.parseDouble(txtIvaVentaFinal.getText()));
        nota_de_venta.setTotal(Double.parseDouble(txtTotalVentaFinal.getText()));
        nota_de_venta.setTipoPago(ComboBoxTipodepago.getSelectedIndex());
         // Inseertar la nota de venta
        if (controladorNotadeVenta.registrarNotaVenta(nota_de_venta)) {
            // Me sirve para obtener el ultimo id de la base de datos de la tabla nota de venta.
            nota_de_venta = controladorNotadeVenta.idRegistrarNotaVenta(nota_de_venta);
            if (nota_de_venta.getIdNotaVenta()!= 0) {
                for (Venta venta : ventasFinal) {
                    ProductoVendido productoVendido = new ProductoVendido();
                    productoVendido.setInventarioIdInvetario(venta.getIdProductoInventario());
                    System.out.println("id Producto"+venta.getIdProductoInventario());
                    productoVendido.setNotaVentaIdNotaVenta(nota_de_venta.getIdNotaVenta());
                    productoVendido.setCantidadProductos(venta.getCantidad());
                    productoVendido.setValorTotal(venta.getTotal());
                    if (!controladorProductoVendido.registrarProductosVendidos(productoVendido)) {
                        JOptionPane.showMessageDialog(this, "Sucedio un error al registrar los productos.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "No se pudo registrar la nota de venta revise los parametros.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            JOptionPane.showMessageDialog(this, "Nota de venta registrada con éxito en el sistema.", "Información", JOptionPane.INFORMATION_MESSAGE);
            LimpiarNotaventa();
        }else {
            JOptionPane.showMessageDialog(this, "No se pudo registrar la nota de venta (2) revise los parametros.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
                
        
    }//GEN-LAST:event_ButtonGuadarNota_ventaActionPerformed
private Persona personaEditarLocalNotaventa;
    public void CargarPersonasVentas() {

        if (!txtCedulaRucVentas.getText().isEmpty()) {
            personaEditarLocalNotaventa = controladorPersona.getPersonaCedula(txtCedulaRucVentas.getText());
            if (personaEditarLocalNotaventa != null) {

                txtCedulaRucVentas.setText(personaEditarLocalNotaventa.getCedula());
                txtNombreClienteVentas.setText(personaEditarLocalNotaventa.getNombre());
                txtTelefonoVentasCliente.setText(personaEditarLocalNotaventa.getTelefono());
                txtxDireccionClienteVentas.setText(personaEditarLocalNotaventa.getDireccion());
                jDateFechaVentaClientefinal.setDate(utilidades.devolverFechaactual2(utilidades.devolverFechaactual()));

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se encontró la persona con ese número de cédula", "ERROR", JOptionPane.ERROR_MESSAGE);
                txtCedulaRucVentas.setText("");
                txtCedulaRucVentas.requestFocus();
            }
        }
    }

    public void CargarProductosVentas() {
        Inventario inventarioeditarLocal = controladorinvetario.getInventarioParaCodigo(txtIDproductoVenta.getText());
        if (inventarioeditarLocal != null) {
            List<Inventario> inventariosAct = controladorinvetario.obetenerProdctoInventarioCodgo(txtIDproductoVenta.getText());

            modelTableVentas.setInventarios(inventariosAct);
            modelTableVentas.fireTableDataChanged();
            System.out.println("" + inventariosAct);
        } else {
            System.out.println("Entro aca");
        }

    }

    private Inventario valoresActualizadosInventario(Inventario inventario) {
        inventario.setCodigo_pro(txtcodigoProductoInvntario.getText());
        inventario.setDescripcion(txtdescripcionInventario.getText());
//        inventario.setPrecio_compra(txtprecioCompraInvntario_sinIva.getText());
//        inventario.setPrecio_venta(txtprecioCompraInvntario_conIva.getText());
        inventario.setCan_productos(txtcatidadInventario.getText());
        return inventario;
    }

    void vaciarProvedores() {
        txtxRuc.setText("");
        txtxRazonSiocial.setText("");
        txtTipo_actividad.setText("");
        txtNombre_Representante_Legal.setText("");
        txtApellido_Representante_legal.setText("");
        txtTelefono_Provedores.setText("");
        txtCorreo_provedores.setText("");
    }

    void vaciarInventario() {
        txtcodigoProductoInvntario.setText("");
        txtdescripcionInventario.setText("");
        txtprecioCompraInvntario_sinIva.setText("");
        txtprecioCompraInvntario_conIva.setText("");
        txtcatidadInventario.setText("");

    }

    public void actulizarTodalatablaPersonas() {
        modelTablePersona.setPersonas(controladorPersona.obtenerPersona());
        modelTablePersona.fireTableDataChanged();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    UIManager.setLookAndFeel(new MetalLookAndFeel()); // linea para cambiar LookAndFeel
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(GestionContable.class.getName()).log(Level.SEVERE, null, ex);
                }

                new GestionContable().setVisible(true); // linea que hace visible al JFrame

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBuscarCedula;
    private javax.swing.JButton BotonBuscarTelefono;
    private javax.swing.JButton ButtonBusquedaAvanzada;
    private javax.swing.JButton ButtonGuadarNota_venta;
    private javax.swing.JButton ButtonImprimir_venta;
    private javax.swing.JButton ButtonLimpiar_venta;
    private javax.swing.JComboBox<String> ComboBoxGeneroPersona;
    private javax.swing.JComboBox<String> ComboBoxTipodepago;
    private javax.swing.ButtonGroup Grupo1;
    private javax.swing.JMenuBar Menu_general;
    private javax.swing.JTable TablaCliente;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonLimpiarCajas;
    private javax.swing.JButton botonLimpiarCajas1;
    private javax.swing.JButton botonTraer;
    private javax.swing.JButton btnBuscarComboboxInventario;
    private javax.swing.JButton btnBuscarPersona;
    private javax.swing.JButton btnBuscarProvedor;
    private javax.swing.JButton btnEditarProvedores;
    private javax.swing.JButton btnEliminarProvedores;
    private javax.swing.JButton btnGuardarProvedores;
    private javax.swing.JButton btnLimpiarProvedor;
    private javax.swing.JButton btnUltimoRegistroProvedor;
    private javax.swing.JButton btneLimpiarnventario;
    private javax.swing.JButton btneditarInventario;
    private javax.swing.JButton btneliminarInventario;
    private javax.swing.JButton btnguardarInventario;
    private javax.swing.JComboBox<String> comboParametroBusquedaPersona;
    private javax.swing.JComboBox<String> combo_busqueda_INVENTARIO;
    private javax.swing.JComboBox<String> conmboBoxBusquedaProvedor;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateFechaNacimiento;
    private com.toedter.calendar.JDateChooser jDateFechaVencimientoDeuda;
    private com.toedter.calendar.JDateChooser jDateFechaVentaClientefinal;
    private com.toedter.calendar.JDateChooser jDateInventario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelApellido;
    private javax.swing.JLabel jLabelCedula;
    private javax.swing.JLabel jLabelCorreo;
    private javax.swing.JLabel jLabelDireccion;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelTelefono;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollCliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableVentas;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JPanel panelClientes;
    private javax.swing.JPanel panelCuerpoRegistro;
    private javax.swing.JPanel panelInventario;
    private javax.swing.JPanel panelProvedores;
    private javax.swing.JPanel panelVenta;
    private javax.swing.JRadioButton radioBotonCedula;
    private javax.swing.JRadioButton radioBotonPasaporte;
    private javax.swing.JMenuItem subMenuBuscarPersona;
    private javax.swing.JMenuItem subMenuEditar;
    private javax.swing.JMenuItem subMenuEliminar;
    private javax.swing.JMenuItem subMenuGuardar;
    private javax.swing.JMenuItem subMenuSalir;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JTable tablaProvedores;
    private javax.swing.JTable tableInventario;
    private javax.swing.JLabel titulo_inventario;
    private javax.swing.JLabel titulo_provedores;
    private javax.swing.JLabel titulo_venta;
    private javax.swing.JLabel txt45;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtApellido_Representante_legal;
    private javax.swing.JTextField txtCantidadProductoVentas;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCedulaRucVentas;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCorreo_provedores;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDireccionProvedores;
    private javax.swing.JTextField txtIDproductoVenta;
    private javax.swing.JTextField txtIvaVentaFinal;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreClienteVentas;
    private javax.swing.JTextField txtNombre_Representante_Legal;
    private javax.swing.JTextField txtNumerodeNotadeVenta;
    private javax.swing.JTextField txtParametroBusquedaPersona;
    private javax.swing.JTextField txtParamtroBusquedaInventario;
    private javax.swing.JTextField txtPramatroBusquedaProvedor;
    private javax.swing.JTextField txtPrecioClienteFijo;
    private javax.swing.JTextField txtPrecioClienteNormal;
    private javax.swing.JTextField txtSubTotalVentaFinal;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefonoVentasCliente;
    private javax.swing.JTextField txtTelefono_Provedores;
    private javax.swing.JTextField txtTipo_actividad;
    private javax.swing.JTextField txtTotalVentaFinal;
    private javax.swing.JTextField txtcatidadInventario;
    private javax.swing.JTextField txtcodigoProductoInvntario;
    private javax.swing.JTextField txtdescripcionInventario;
    private javax.swing.JTextField txtprecioCompraInvntario_conIva;
    private javax.swing.JTextField txtprecioCompraInvntario_sinIva;
    private javax.swing.JTextField txtprecioMayoristaInventario;
    private javax.swing.JTextField txtxDireccionClienteVentas;
    private javax.swing.JTextField txtxRazonSiocial;
    private javax.swing.JTextField txtxRuc;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clickPersona(Persona p) { // seteamos los valores y se muestran los datos en el folmulario
        System.out.println("Persona" + p.toString());
        txtCedula.setText(p.getCedula());
        txtNombre.setText(p.getNombre());
        txtApellido.setText(p.getApellido());
        txtDireccion.setText(p.getDireccion());
        txtTelefono.setText(p.getTelefono());
        txtCorreo.setText(p.getCorreo());
        ComboBoxGeneroPersona.setSelectedIndex(p.getGenero());
        jDateFechaNacimiento.setDate(p.getFecha_de_nacimiento());
        System.out.println("Fecha_Registro_Persona" + p.getFechaRegistro());
        personaEditar = p;
    }

    private void buscarCliente() {
    }

    @Override
    public void clickProveedores(Provedores provedores) {
        txtxRuc.setText(provedores.getRuc());
        txtxRazonSiocial.setText(provedores.getRazonSocial());
        txtTipo_actividad.setText(provedores.getTipoActividad());
        txtNombre_Representante_Legal.setText(provedores.getNombreRepresentanteLegal());
        txtApellido_Representante_legal.setText(provedores.getApellidoRepresentanteLegal());
        txtTelefono_Provedores.setText(provedores.getTelefono());
        txtCorreo_provedores.setText(provedores.getCorreo());
        txtDireccionProvedores.setText(provedores.getDireccion());
        jDateFechaVencimientoDeuda.setDate(provedores.getFechaVencimientoDeuda());
        System.out.println("FechaRegistro: " + provedores.getFechaVencimientoDeuda());
        System.out.println("FechaRegistro: " + provedores.getFechaRegistro());
        editarProvedores = provedores;
    }

    @Override
    public void clickInventario(Inventario inventario) {
        txtcodigoProductoInvntario.setText(inventario.getCodigo_pro());
        txtdescripcionInventario.setText(inventario.getDescripcion());
        txtcatidadInventario.setText(inventario.getCan_productos());
        txtprecioCompraInvntario_sinIva.setText(Double.toString(inventario.getPrecios_compra_sin_iva()));
        txtprecioCompraInvntario_conIva.setText(Double.toString(inventario.getPrecios_compra_con_iva()));
        txtprecioMayoristaInventario.setText(Double.toString(inventario.getPrecio_mayorista()));
        txtPrecioClienteFijo.setText(Double.toString(inventario.getPrecio_cliente_fijo()));
        txtPrecioClienteNormal.setText(Double.toString(inventario.getPrecio_cliente_normal()));
        jDateInventario.setDate(inventario.getFecha_caducidad());
        inventarioEditarSeleccionado = inventario;

    }
    //  List<Venta> ventasFinal;
    int contClick = 0;
    boolean Iniciar;

    //@Override
    public void clickProductovender(Venta v) {
        Iniciar = true;
        //HILO DE PROGRMACIÓN
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (Iniciar) {
                    try {
                        //Parar un segundo
                        Thread.sleep(1000);
                        contClick = 0;
                        Iniciar = false;
                        System.out.println("Reinicia CLICK");
                    } catch (InterruptedException e) {
                        System.out.println(e.getMessage());
                    }
                }
            }
        }).start();

        contClick++;
        if (contClick == 2) {
            if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará el item, ¿desea continuar?",
                    "Eliminar Producto", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                ventasFinal.remove(v);
                PreciosFinalesVenta();
                modelTableVentaFinal.setProductoVenta(ventasFinal);
                modelTableVentaFinal.fireTableDataChanged();
            }
            contClick = 0;
            Iniciar = false;
        }
        System.out.println("Contado cliclk venta" + contClick);
    }

}
